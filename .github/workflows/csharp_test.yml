name: CI

on:
  push:
    branches-ignore:
      - 'auto.**'
  workflow_call:
    inputs:
      checkout-ref:
        description: 'The ref to checkout'
        required: false
        type: string

jobs:
  build-native-dev-library:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./binding
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        ref: ${{ inputs.checkout-ref || github.head_ref }}
    - uses: ./.github/composite/build-dev-rust
      with:
        cache-path: ./binding/voicevox_core/target/release/libvoicevox_core.so
        cache-key: ${{ runner.os }}-dev-library-${{ hashFiles('**/Cargo.lock', '**/VoicevoxCoreSharp.Core.Metas.props') }}

  test-dotnet:
    runs-on: ubuntu-latest
    needs: build-native-dev-library
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        ref: ${{ inputs.checkout-ref || github.head_ref }}
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6
    - uses: actions/cache/restore@v4
      with:
        path: ./binding/voicevox_core/target/release/libvoicevox_core.so
        key: ${{ runner.os }}-dev-library-${{ hashFiles('**/Cargo.lock', '**/VoicevoxCoreSharp.Core.Metas.props') }}
    - run: cp ./binding/voicevox_core/target/release/libvoicevox_core.so ./tests/VoicevoxCoreSharp.Core.Tests/resources/libvoicevox_core.so
    - uses: ./.github/composite/download-openjtalk-dict
      with:
        cache-path: open_jtalk_dic_utf_8-1.11.tar.gz
        cache-key: open_jtalk_dic_utf_8-1.11
    - run: |
        cp open_jtalk_dic_utf_8-1.11.tar.gz ./tests/VoicevoxCoreSharp.Core.Tests/resources
        tar zxf ./tests/VoicevoxCoreSharp.Core.Tests/resources/open_jtalk_dic_utf_8-1.11.tar.gz -C tests/VoicevoxCoreSharp.Core.Tests/resources/
    - name: sample.vvmを自前でzipコマンドで作成する
      run: mkdir -p tests/VoicevoxCoreSharp.Core.Tests/resources/model; cd binding/voicevox_core/model/sample.vvm; zip -r ../../../../tests/VoicevoxCoreSharp.Core.Tests/resources/model/sample.vvm .
    - run: dotnet test VoicevoxCoreSharp-without-exmaples.slnf

  run-dotnet-cli-example:
    runs-on: ubuntu-latest
    needs: build-native-dev-library
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        ref: ${{ inputs.checkout-ref || github.head_ref }}
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8
    - uses: actions/cache/restore@v4
      with:
        path: ./binding/voicevox_core/target/release/libvoicevox_core.so
        key: ${{ runner.os }}-dev-library-${{ hashFiles('**/Cargo.lock', '**/VoicevoxCoreSharp.Core.Metas.props') }}
    - run: mkdir -p ./examples/cli/voicevox_core
    - run: cp ./binding/voicevox_core/target/release/libvoicevox_core.so ./examples/cli/voicevox_core/libvoicevox_core.so
    - uses: ./.github/composite/download-openjtalk-dict
      with:
        cache-path: open_jtalk_dic_utf_8-1.11.tar.gz
        cache-key: open_jtalk_dic_utf_8-1.11
    - run: |
        cp open_jtalk_dic_utf_8-1.11.tar.gz ./examples/cli/voicevox_core
        tar zxf ./examples/cli/voicevox_core/open_jtalk_dic_utf_8-1.11.tar.gz -C ./examples/cli/voicevox_core/
    - run: cp -r binding/voicevox_core/model ./examples/cli/voicevox_core
    - run: cd examples/cli; dotnet run --property:UseNugetOnnxRuntime=true -- こんにちは
    - run: file examples/cli/audio.wav

  format-check:
    runs-on: ubuntu-latest
    needs: build-native-dev-library
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        ref: ${{ inputs.checkout-ref || github.head_ref }}
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8
    - run: make format/check
