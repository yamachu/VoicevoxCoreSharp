<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>

    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <Import Project="..\..\src\VoicevoxCoreSharp.Core\VoicevoxCoreSharp.Core.Metas.props" />

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <Choose>
    <When Condition="$([MSBuild]::IsOsPlatform('OSX')) And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">
      <PropertyGroup>
        <!-- onnxruntime依存 -->
        <_MyRuntimeIdentifier>osx-arm64</_MyRuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOsPlatform('OSX')) And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
      <PropertyGroup>
        <_MyRuntimeIdentifier>osx-x64</_MyRuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOsPlatform('Linux')) And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">
      <PropertyGroup>
        <_MyRuntimeIdentifier>linux-arm64</_MyRuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOsPlatform('Linux')) And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">
      <PropertyGroup>
        <_MyRuntimeIdentifier>linux-x64</_MyRuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOsPlatform('Windows')) And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64' ">
      <PropertyGroup>
        <_MyRuntimeIdentifier>win-x64</_MyRuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOsPlatform('Windows')) And '$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X86' ">
      <PropertyGroup>
        <_MyRuntimeIdentifier>win-x86</_MyRuntimeIdentifier>
      </PropertyGroup>
    </When>
    <Otherwise>
      <!-- Not supported OS or Architecture -->
    </Otherwise>
  </Choose>

  <ItemGroup>
    <ProjectReference Include="..\..\src\VoicevoxCoreSharp.Core\VoicevoxCoreSharp.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="resources\libvoicevox_core.dylib" TargetPath="libvoicevox_core.dylib" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('OSX'))" />
    <Content Include="resources\libvoicevox_core.so" TargetPath="libvoicevox_core.so" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Linux'))" />
    <!-- CAUTION: Not tested on Windows, need help -->
    <Content Include="resources\voicevox_core.dll" TargetPath="runtimes\$(_MyRuntimeIdentifier)\native\voicevox_core.dll" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Windows'))" />

    <Content Include="resources\libonnxruntime.dylib" TargetPath="libonnxruntime.dylib" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('OSX'))" />
    <Content Include="resources\libonnxruntime.so" TargetPath="libonnxruntime.so" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Linux'))" />
    <!-- CAUTION: Not tested on Windows, need help -->
    <Content Include="resources\onnxruntime.dll" TargetPath="onnxruntime.dll" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Windows'))" />

    <!-- for load testing -->
    <Content Include="resources\libonnxruntime.dylib" TargetPath="libonnxruntime_another_path.dylib" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('OSX'))" />
    <Content Include="resources\libonnxruntime.so" TargetPath="libonnxruntime_another_path.so" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Linux'))" />
    <!-- CAUTION: Not tested on Windows, need help -->
    <Content Include="resources\onnxruntime.dll" TargetPath="onnxruntime_another_path.dll" Visible="false" CopyToOutputDirectory="PreserveNewest" Condition="$([MSBuild]::IsOsPlatform('Windows'))" />
  </ItemGroup>

</Project>
